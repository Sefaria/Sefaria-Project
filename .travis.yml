language: python
dist: trusty

python:
  - "2.7"

cache: pip

services:
  - mongodb


addons:
  sauce_connect:
    username: "sefaria"
    access_key:
      secure: "QS2L6wVpfCV0tc2mxhaKekTwoQw2z3NjG082mFd4J3xZiwDIOlP9yHmUnF7lkb89kn6/uyf5NOSwE33kvSJB03NIosd0pBRA3bvBf7UGpUiZwE5t2IHyGDMDB+QPW9xZORBhA0fZpPZucyb4EO1WLBqlajZLTEup6um7HaqBI+nsu/7cZJIUkqmMp6qPTaBV8BUDL/ehnXg8jm66+Gb5BAyApx1DU8eugVhEWdvPs3evQTxcQnVOXQtn2VR5A0QHpa6lz5J9tJcd3HVb9oWQ84WkO5LqVRXvpTp/1LNMyJ/v6VL3kxB5Y7pWU+pytaxaBnzV5dYjAv6+0Ea4a2CBqmpcwT1OWNAqgWt3FusMt8HLO374aeHMtPtj7Ou54GuQxJoMBOhe3MbZ55SEkOuqhPVa6FCCYAevAPVlku1XOTgQeMzJeIrZ3/Wv8sx07U2UGwAl+xBKOYRaCOOwWYPKWWsIBPeH1bQD6SqPSuYxbu4iGN/xrakvHHEjRLIjy/iHleMX62ELGpaAqt8Ppzjn5Z0Oh7aG14pyP3dzQy7vgDCIQ7ZFtTSDdPC9PiOSQ5aQkaFL4FU9ElaetHEWqFayghj10sSuSuO8Q+U8arW+wHWEotaZ7dfvhX0fHHSotEye+loIXVHm6bSOq8XPaZqJ+z/djxysmKfxUynIeOX73zY="

env:
  PYTHONPATH=$TRAVIS_BUILD_DIR
  DJANGO_SETTINGS_MODULE=sefaria.settings
  TRAVIS_NODE_VERSION="7.9.0"

before_install:
  - sudo apt-get -qq update
  - sudo apt-get install libwww-perl

# command to install dependencies
install:
  - "pip install -r requirements.txt"
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
  - npm install
  - cp ./node/local_settings_example.json ./node/local_settings.json
  - npm run build-prod

before_script:
  # Create a writable log dir
  - mkdir log
  - chmod 777 log

  # Install mongo 2.6.6 (default is too old) - as per https://docs.mongodb.com/v2.6/tutorial/install-mongodb-on-ubuntu/
  # - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  # - echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list
  # - sudo apt-get update
  # - sudo apt-get install -y mongodb-org=2.6.6 mongodb-org-server=2.6.6 mongodb-org-shell=2.6.6 mongodb-org-mongos=2.6.6 mongodb-org-tools=2.6.6

  # Download and restore the Sefaria database
  - wget -nv $MONGO_DUMP_URL
  - tar -xzvf $MONGO_DUMP_FILENAME
  - mongorestore --quiet --drop

  # Copy in settings files tuned for the travis build
  - cp ./sefaria/.travis.settings.py ./sefaria/local_settings.py
  - cp ./reader/browsertest/framework/creds-example.py ./reader/browsertest/framework/creds.py

  # Get rid of the conftest that forces a copy of the datastore to a test db
  - rm ./sefaria/conftest.py

  # Create the user db
  - python manage.py syncdb --noinput
  - python manage.py createsuperuser --email $SEFARIA_SUPERUSER  --noinput

  # run the django server, redirecting output to log files
  - python manage.py runserver --insecure 2> server.error.log > server.log &
  - python scripts/setup_travis_users.py

  # Wait for server to come up
  - while ! nc -z localhost 8000; do sleep 0.1; done;

  # Prime the cache
  - GET http://localhost:8000/api/texts/Genesis.1 > /dev/null &
  - GET http://localhost:8000/api/preview/Zohar > /dev/null &
  - GET http://localhost:8000/api/name/stam?ref_only=1 > /dev/null &
  - GET http://localhost:8000/api/name/stam > /dev/null &

script:
 - 'py.test -m "not deep and not failing"'
 - 'if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then cd reader/browsertest && python run_tests_on_travis.py "Build - ${TRAVIS_BUILD_NUMBER}" 2> selenium.error.log; else true; fi;'

after_failure:
- cat $TRAVIS_BUILD_DIR/reader/browsertest/selenium.error.log
- cat $TRAVIS_BUILD_DIR/server.error.log

notifications:
  slack:
    rooms:
      secure: "nOmFvlzqc8f/p3mQxfLaCpowPuxaohCsrk5f6kgXLccNZhPdc7NRwxo8Rr7a4APVzqwlcxV7TyPDX3qGHxcE5hp2ibHlZX1icx4/DkPejsUfIfPksFg30bYzl9qv18JwyVvtfB9hAehbJDjxKjMR+MPRkspNZbHnKex5p4FgE4wcaMNosqQnvo9qUmgVs7wxcFbx+jj0ULBI1pSbAo49HJF3djebcQLDmx0ZF/R4F8RmXmEDuhwYi/avywklRRRYuq9ilUMMFyuABovFBPzOjt77XpUmp+9jRSH0EbKujCeptyfzu2kc0Y4A6e/IhDL8p8fZ3ppCNY0TpWTiX0hKeUYB+IvAmU31CQb4vJXA21zmR2G/++l56zd+5DPsTDxgw7zdQCNte5Vlt6A6xob2UQZS10vBoxnK5vv4DDPTqUGo6s/1NoB4ReuFi/E26ytYBmdFcQRp967O2YEqCWUmquWc2KaNE8sloXCfvo+MthRHp4FolZ3+fy1znJqqkwA6ux2G03CCfdTiAnxOKLB67jjYCrOBo2ZP2vsVka5Bjcu82HySkMF5kAC5rdUMR9A8HQ5wPHN1Eu7IlG7Dr556GC8dICGFdUSnd4nQMc2Byb/iQWsn45elkGKDTXWGVxTe7qnQ8YGNjE5722aSRi3WaXIiRPrNdydaxIzlKG6YNPU="
