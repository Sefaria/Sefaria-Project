# TODO: Remove references to sandboxes
---
substitutions:
  _ENV_NAME: ASDF
  _GKE_CLUSTER: cluster-1
  _GKE_NAMESPACE: sandboxes
  _GKE_REGION: us-east1-b
  _IS_SANDBOX: "false"
  _K8S_ADMIN_BRANCH: "master"
  _MONGO_HOST: mongo
  _POSTGRES_HOST: "postgres"
  _RESOURCE_ALLOCATION: ASDF

options:
  machineType: N1_HIGHCPU_8

steps:
  - name: "gcr.io/cloud-builders/git"
    args: ['clone', 'https://source.developers.google.com/p/production-deployment/r/k8s-admin', '--branch', '${_K8S_ADMIN_BRANCH}', "--depth", "1"]
    id: k8s-admin_clone
    wait_for: [ "-" ]

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: print_k8s_admin_git_hash
    entrypoint: bash
    dir: k8s-admin
    args: ["-c", 'git rev-parse HEAD > ../k8s-admin-hash.txt']
    wait_for: ["k8s-admin_clone"]


  # Build artifacts
  - name: gcr.io/kaniko-project/executor:v1.6.0
    args:
      - --destination=gcr.io/${PROJECT_ID}/sefaria-web-${_ENV_NAME}:$SHORT_SHA
      - --destination=gcr.io/${PROJECT_ID}/sefaria-web-${_ENV_NAME}:$TAG_NAME
      - --destination=gcr.io/${PROJECT_ID}/sefaria-web-${_ENV_NAME}:latest
      - --cache=true
      - --dockerfile=build/web/Dockerfile
      - --context=dir://.
    id: web_container
    wait_for: [ "-" ]

  - name: gcr.io/kaniko-project/executor:v1.6.0
    args:
      - --destination=gcr.io/${PROJECT_ID}/sefaria-node-${_ENV_NAME}:$SHORT_SHA
      - --destination=gcr.io/${PROJECT_ID}/sefaria-node-${_ENV_NAME}:$TAG_NAME
      - --destination=gcr.io/${PROJECT_ID}/sefaria-node-${_ENV_NAME}:latest
      - --cache=true
      - --dockerfile=build/node/Dockerfile
      - --context=dir://.
    id: nodejs_container
    wait_for: [ "-" ]
  
  - name: gcr.io/kaniko-project/executor:v1.6.0
    args:
      - --destination=gcr.io/${PROJECT_ID}/sefaria-asset-${_ENV_NAME}:$SHORT_SHA
      - --destination=gcr.io/${PROJECT_ID}/sefaria-asset-${_ENV_NAME}:$TAG_NAME
      - --destination=gcr.io/${PROJECT_ID}/sefaria-asset-${_ENV_NAME}:latest
      - --cache=false
      - --dockerfile=build/nginx/Dockerfile
      - --build-arg=SRC_IMG=gcr.io/${PROJECT_ID}/sefaria-web-${_ENV_NAME}:$SHORT_SHA
      - --context=dir://.
    id: nginx_container
    wait_for: [ web_container ]

  # Outputs a file to /k8s-admin/v2/app_settings/helm/_sandboxValues.yaml
  - name: gcr.io/${PROJECT_ID}/mongo-restore # used for gettext access
    dir: k8s-admin/v2/app_settings/helm
    entrypoint: "bash"
    args: ['-c', './generateHelmValues.bash']
    id: generate_helm_values
    env: 
      - 'ENV_NAME=${_ENV_NAME}'
      - 'IS_SANDBOX=${_IS_SANDBOX}'
      - 'RESOURCE_ALLOC=${_RESOURCE_ALLOCATION}'
      - 'PROJECT_ID=${PROJECT_ID}'
    wait_for: [ "k8s-admin_clone" ]

  # Outputs a file to /k8s-admin/v2/app_settings/local_settings/_local_settings.py
  - name: gcr.io/${PROJECT_ID}/mongo-restore # used for gettext access
    dir: k8s-admin/v2/app_settings/local_settings
    entrypoint: "bash"
    args: ['-c', './generateLocalSettings.bash']
    id: generate_localsettings_file
    env: 
      - 'ENV_NAME=${_ENV_NAME}'
      - 'IS_SANDBOX=${_IS_SANDBOX}'
      - 'MONGO_HOST=${_MONGO_HOST}' # Should this be parmeterized here or read in the repo
      - 'POSTGRES_HOST=${_POSTGRES_HOST}' # Should this be parmeterized here or read in the repo
      - 'SEFARIA_DB=sefaria-${_ENV_NAME}'
    wait_for: [ "k8s-admin_clone" ]
  
  # Copy localsettings into file
  # Later, combined this with the script above
  - name: "gcr.io/production-deployment/cloudbuild-helm:v3.5.4"
    dir: k8s-admin/v2
    id: copy_localsettings_file
    entrypoint: cp
    args: ["-f", "./app_settings/local_settings/_local_settings.py", "./charts/sefaria/local_settings.py"]
    wait_for:
      - generate_localsettings_file
      - k8s-admin_clone

  - name: gcr.io/${PROJECT_ID}/mongo-restore
    dir: k8s-admin/v2/app_settings/nginx
    entrypoint: "bash"
    args: ['-c', './generateRobotsTxtFile.bash']
    id: generate_robots_file
    env: 
      - 'IS_PROD=true'
    wait_for: [ "-" ]
    
  # Copy robots.txt into file
  # Later, combined this with the script above
  - name: "gcr.io/production-deployment/cloudbuild-helm:v3.5.4"
    dir: k8s-admin/v2
    id: copy_robots_file
    entrypoint: cp
    args: ["-f", "./app_settings/nginx/_robots.txt", "./charts/sefaria/robots.txt"]
    wait_for:
      - generate_robots_file

  - name: "gcr.io/${PROJECT_ID}/cloudbuild-helm:v3.5.4"
    id: deploy_sandbox
    dir: k8s-admin/v2
    args: ["upgrade", "-i", "sefaria-${_ENV_NAME}", "./charts/sefaria", "--namespace", "${_GKE_NAMESPACE}", "--set-string", "releaseImageTag=$SHORT_SHA", "-f", "app_settings/helm/_envValues.yaml", "-f", "app_settings/helm/_resourceValues.yaml", "--debug"]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_GKE_REGION}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
      - 'KUBECTL_VERSION=1.18'
      - 'KUBECONFIG=/root/.kube/config'
    wait_for:
      - web_container
      - nodejs_container
      - nginx_container
      - generate_helm_values
      - generate_localsettings_file
      - copy_localsettings_file
      - k8s-admin_clone
      - generate_robots_file

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: slack_notification
    entrypoint: bash
    args: [ '-c', 'gcloud pubsub topics publish projects/production-deployment/topics/deployment-notification --message "[Production Deployment] App Version: ${TAG_NAME}; k8s-admin git hash: `cat k8s-admin-hash.txt`; Build Id: ${BUILD_ID}"' ]
    wait_for: 
      - print_k8s_admin_git_hash
      - deploy_sandbox
...
