{{- if .Values.backup.mongo.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: create-dumps-{{ .Values.deployEnv }}
  labels:
    deployEnv: "{{ .Values.deployEnv }}"
    {{- include "sefaria.labels" . | nindent 4 }}
data:
  create-dumps.sh: |-
    #!/usr/bin/env bash

    {{- if .Values.restore.dynamicName }}
    DATABASE="${SEFARIA_DB}-{{ .Values.deployEnv | quote }}"
    {{- else }}
    DATABASE="${SEFARIA_DB}"
    {{- end }}

    if [[ -z "$MONGO_HOST" ]]; then
      echo "Mongo Host not specified"
      exit 1
    fi

    URI="mongodb://"

    if [[ ! -z "$SEFARIA_DB_USER" ]]; then
      URI="${URI}${SEFARIA_DB_USER}"
      if [[ ! -z "$SEFARIA_DB_PASSWORD" ]]; then
          URI="${URI}:${SEFARIA_DB_PASSWORD}"
      fi
      URI="${URI}@"
    fi

    URI="${URI}${MONGO_HOST}/?ssl=false"

    if [[ ! -z "$SEFARIA_DB_USER" ]]; then
      URI="${URI}&authSource=admin"
    fi

    if [[ ! -z "MONGO_REPLICASET_NAME" ]]; then
      URI="${URI}&replicaSet=${MONGO_REPLICASET_NAME}"
    fi

    DATADIR="/mongodumps/shared_volume"
    echo "dumping"
    until mongodump --uri="$URI" -vvv -d $DATABASE --collection history -o "${DATADIR}/dump"
    do
    echo "trying to dump history again"
    sleep 2
    done

    until mongodump --uri="$URI" -v -d $DATABASE --collection texts -o "${DATADIR}/dump"
    do
    echo "trying to dump texts again"
    sleep 2
    done

    until mongodump --uri="$URI" -v -d $DATABASE --collection links -o "${DATADIR}/dump"
    do
    echo "trying to dump links again"
    sleep 2
    done

    until mongodump --uri="$URI" -v -d $DATABASE --collection sheets -o "${DATADIR}/dump"
    do
    echo "trying to dump sheets again"
    sleep 2
    done

    until mongodump --uri="$URI" -v -d $DATABASE --excludeCollection=history --excludeCollection=texts --excludeCollection=sheets --excludeCollection=links --excludeCollection=django_cache  --excludeCollection=user_history -o "${DATADIR}/dump"
    do
    echo "trying to dump other stuff again"
    sleep 2
    done

    # exit and restart job if dump fails
    #if [ $? -ne 0 ]
    #then
    #  exit 1
    #fi

    mkdir /tmp_storage

    echo "building full private tar file"
    tar cvzf "${DATADIR}/private_dump.tar.gz" -C "${DATADIR}" ./dump

    rm "${DATADIR}/dump/sefaria/user_history.bson"
    rm "${DATADIR}/dump/sefaria/user_history.metadata.json"

    mv "${DATADIR}/dump/sefaria/history.bson" "/tmp_storage/history.bson"
    mv "${DATADIR}/dump/sefaria/history.metadata.json" "/tmp_storage/history.metadata.json"

    echo "building small private tar file"
    tar cvzf "${DATADIR}/private_dump_small.tar.gz" -C "${DATADIR}" ./dump

    {{- if .Values.backup.mongo.public }}
    echo "creating public dump"
    until mongodump --uri="$URI" -d sefaria -v --collection texts --query '{"license": {"$not": {"$regex": "/^Copyright/i"}}}' -o "${DATADIR}/dump"
    do
    echo "trying to dump texts again"
    sleep 2
    done

    #if [ $? -ne 0 ]
    #then
    #  exit 1
    #fi

    rm "${DATADIR}/dump/sefaria/apikeys.bson"
    rm "${DATADIR}/dump/sefaria/apikeys.metadata.json"

    rm "${DATADIR}/dump/sefaria/notes.bson"
    rm "${DATADIR}/dump/sefaria/notes.metadata.json"

    rm "${DATADIR}/dump/sefaria/layers.bson"
    rm "${DATADIR}/dump/sefaria/layers.metadata.json"

    rm "${DATADIR}/dump/sefaria/sheets.bson"
    rm "${DATADIR}/dump/sefaria/sheets.metadata.json"

    rm "${DATADIR}/dump/sefaria/locks.bson"
    rm "${DATADIR}/dump/sefaria/locks.metadata.json"

    rm "${DATADIR}/dump/sefaria/notifications.bson"
    rm "${DATADIR}/dump/sefaria/notifications.metadata.json"

    rm "${DATADIR}/dump/sefaria/profiles.bson"
    rm "${DATADIR}/dump/sefaria/profiles.metadata.json"

    rm "${DATADIR}/dump/sefaria/trend.bson"
    rm "${DATADIR}/dump/sefaria/trend.metadata.json"

    rm "${DATADIR}/dump/sefaria/user_story.bson"
    rm "${DATADIR}/dump/sefaria/user_story.metadata.json"

    rm "${DATADIR}/dump/sefaria/Copy_of_user_history.bson"
    rm "${DATADIR}/dump/sefaria/Copy_of_user_history.metadata.json"

    echo "building small public tar file"
    tar cvzf "${DATADIR}/dump_small.tar.gz" -C "${DATADIR}" ./dump

    mv "/tmp_storage/history.bson" "${DATADIR}/dump/sefaria/history.bson"
    mv "/tmp_storage/history.metadata.json" "${DATADIR}/dump/sefaria/history.metadata.json"

    echo "building full public tar file"
    tar cvzf "${DATADIR}/dump.tar.gz" -C "${DATADIR}" ./dump
    {{- end }}

    echo "upload shoud start"
{{- end }}
