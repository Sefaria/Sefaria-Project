apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-{{ .Values.deployEnv }}
  annotations:
    {{- if eq .Values.sandbox "true" }}
    kubernetes.io/ingress.class: nginx-ingress
    {{- else }}
    kubernetes.io/ingress.global-static-ip-name: "sefaria-{{ .Values.deployEnv }}"
    {{- end }}
spec:
  tls:
    - secretName: {{ template "secrets.originTls" . }}
    {{- if eq .Values.deployEnv "prod" }}
    - secretName: {{ template "secrets.originIlTls" . }}
    {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ tpl .host $ | quote }}
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .serviceName | default "nginx" }}-{{ $.Values.deployEnv }}
                port: 
                  number: {{ .port | default "80" }}
    {{- end }}
---
{{- if and .Values.ingress.secrets.originTls.data ( or ( eq .Values.deployEnv "prod" ) ( eq .Values.deployEnv "democracy" ) ) }}
apiVersion: v1
kind: Secret
metadata:
  name: origin-tls-{{ .Values.deployEnv }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.ingress.secrets.originTls.data.cert | b64enc }}
  tls.key: {{ .Values.ingress.secrets.originTls.data.key | b64enc }}
{{- end }}
---
{{- if and .Values.ingress.secrets.originIlTls.data ( eq .Values.deployEnv "prod" ) }}
apiVersion: v1
kind: Secret
metadata:
  name: origin-il-tls-{{ .Values.deployEnv }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.ingress.secrets.originIlTls.data.cert | b64enc }}
  tls.key: {{ .Values.ingress.secrets.originIlTls.data.key | b64enc }}
{{- end }}

