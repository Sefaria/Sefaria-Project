{{- if .Values.cronJobs.regenerate.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.deployEnv }}-regenerate
  labels:
    {{- include "sefaria.labels" . | nindent 4 }}
spec:
  schedule: "0 6 * * 6"
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          containers:
          - name: regenerate
            image: "{{ .Values.web.containerImage.imageRegistry }}:{{ .Values.web.containerImage.tag }}"
            env:
            - name: REDIS_HOST
              value: "redis-{{ .Values.deployEnv }}"
            - name: NODEJS_HOST
              value: "node-{{ .Values.deployEnv }}-{{ .Release.Revision }}"
            - name: VARNISH_HOST
              value: "varnish-{{ .Values.deployEnv }}-{{ .Release.Revision }}"
            envFrom:
            - secretRef:
                name: {{ .Values.secrets.localSettings.ref }}
                optional: true
            - secretRef:
                name: local-settings-secrets-{{ .Values.deployEnv }}
                optional: true
            - configMapRef:
                name: local-settings-{{ .Values.deployEnv }}
            volumeMounts:
              - mountPath: /app/sefaria/local_settings.py
                name: local-settings
                subPath: local_settings.py
                readOnly: true
            command: ["bash"]
            args: [
              "-c",
              "/app/run /app/scripts/regenerate_long_cached_data.py --all"
            ]
          restartPolicy: OnFailure
          volumes:
          - name: local-settings
            configMap:
              name: local-settings-file-{{ .Values.deployEnv }}
              items:
                - key: local_settings.py
                  path: local_settings.py
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
{{- end }}
