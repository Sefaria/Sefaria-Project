---
# Need to pass $BUILD_ID to this key when applying the helm chart in CI.
# or
# Set the commit hash for a particular buiild to deploy built image for that
# commit ID. (NOTE: This would work only if the image is built for that commit
# ID.)
releaseImageTag:

# Setting this to true will make this a sandbox environment. It'll set the
# following:
# - nodeAffinity for the Monitor, Nodejs, Redis, Varnish, Web & Nginx pod to
#   schedule opn node where preemptible=true
# - Set appropriate labels to Nginx pod
# - Requests images with the tag "sandbox-<releaseImageTag>"
sandbox: "false"

# This value sets the name of the environment and it's associated objects. Some
# suggestions for the values are prod/dev/test
deployEnv: "dev"

# Helps create services for nginx, nodeja, varnish and web pods with appropriate
# tags that help ArgoCD do blue green deployments.
previousServicesCount: "3"

# write the full path to the back up if you want to start the environment from
# a specific backup else leave blank.
restore:
  enabled: true
  bucket: sefaria-mongo-backup
  # tarball:
  serviceAccount: database-backup-read

# config to backup environment DB
backup:
  mongo:
    enabled: false
    prefix: ""
    public: true
    bucket: sefaria-mongo-backup
    archiveBucket: sefaria-mongo-archive
    serviceAccount: database-backup-write
    version: 4.4
  postgres:
    enabled: false
    version: 10.3
    prefix: ""
    bucket: sefaria-user-backup
    serviceAccount: database-backup-write
  sitemaps:
    enabled: false
    serviceAccount: database-backup-write
    bucket: sefaria-sitemaps

web:
  # key-pair values to load into web pod environment.  Takes precedence over global localsettings
  localsettings:
  # APP: web
  containerImage:
    # Full path of the image registry imclusive of the image name
    imageRegistry: gcr.io/production-deployment/sefaria-web
    # Commit id of the repo for which the image build has been triggered.
    tag: latest
  replicaCount: 1
  resources:
    web:
      gunicornWorkerCount: 1
      gunicornThreadCount: 1
      resources:
        requests:
          memory: "1Gi"
          cpu: "100m"
        limits:
          memory: "3Gi"
          cpu: "1000m"
    djangoLog:
      requests:
        memory: "100Mi"
        cpu: "50m"
      limits:
        memory: "150Mi"
        cpu: "100m"
  secrets:
    googleClient:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:
    logging:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:
    schoolLookup:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:
    elasticCertificate:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:

linker:
  enabled: false
  # key-pair values to load into web pod environment.  Takes precedence over global localsettings
  model_paths:
    # en: future_path
    he: "gs://sefaria-ml-models/ref_model.tar.gz"
  part_model_paths:
    # en: future_path
    he: "gs://sefaria-ml-models/subref_model.tar.gz"
  localsettings:
  # APP: web
  containerImage:
    # Full path of the image registry imclusive of the image name
    imageRegistry: gcr.io/production-deployment/sefaria-linker
    # Commit id of the repo for which the image build has been triggered.
    tag: latest
  replicaCount: 1
  serviceAccount: linker
  resources:
    web:
      gunicornWorkerCount: 1
      gunicornThreadCount: 1
      resources:
        requests:
          memory: "2Gi"
          cpu: "100m"
          nvidia.com/gpu: 1
        limits:
          memory: "3Gi"
          cpu: "1000m"
          nvidia.com/gpu: 1
    djangoLog:
      requests:
        memory: "100Mi"
        cpu: "50m"
      limits:
        memory: "150Mi"
        cpu: "100m"
  tolerations:
    - key: nvidia.com/gpu
      operator: Equal
      value: present
      effect: NoSchedule
  secrets:
    googleClient:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:
    logging:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:
    schoolLookup:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:

redis:
  containerImage:
    # Full path of the image registry inclusive of the image name
    imageRegistry: redis
    # Version of varnish that's required for the application.
    tag: latest
  replicaCount: 1
  resources:
    requests:
      memory: "250Mi"
      cpu: "100m"
    limits:
      memory: "500Mi"
      cpu: "120m"

nodejs:
  containerImage:
    # Full path of the image registry inclusive of the image name
    imageRegistry: gcr.io/production-deployment/sefaria-node
    # Commit id of the repo for which the image build has been triggered.
    tag: latest
  # key-pair values to load into node pod environment.  Takes precedence over global localsettings
  localsettings:
  # APP: node
  replicaCount: 1
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "200Mi"
      cpu: "400m"

varnish:
  containerImage:
    # Full path of the image registry inclusive of the image name
    imageRegistry: ibmcom/varnish
    # Version of varnish that's required for the application.
    tag: 0.32.0
  logging: {}
  replicaCount: 1
  resources:
    requests:
      # must be in megabibytes, because we pass it into the malloc definition
      memory: "25Mi"
      cpu: "10m"
    limits:
      memory: "300Mi"
      cpu: "100m"
  tuning:
    # malloc should be ~75% of the memory request.
    malloc: "250m"
    nuke_limit: "400"
    # Threading
    # http://book.varnish-software.com/4.0/chapters/Tuning.html#details-of-threading-parameters
    thread_pools: 2  # Default: 2
    thread_pool_max: 5000  # Default: 5000; should be a function of resources.request.memory
    thread_pool_min: 100  # Default: 100
    # Timers
    # http://book.varnish-software.com/4.0/chapters/Tuning.html#timers
    first_byte_timeout: 90  # Default 60s
    between_bytes_timeout: 90  # Default 60s
  secrets:
    varnish:
      # for local testing purposes or CI pipeline use input a value
      # data:
      # Reference to an existing secret in the cluster
      ref:
  monitoring:
    enabled: false
    image: ibmcom/varnish-metrics-exporter
    tag: 0.32.0

ingress:
 # You can set path: serviceName: and port: for each host. By default they are
 # set to '/*', 'nginx', '80' respectively for each. Do note that changing this
 # means you'll have to change the nginx service as well.
  hosts:
    - host: "{{ .Values.deployEnv }}.cauldron.sefaria.org"
      path: /*
      serviceName: nginx
      port: 80
  secrets:
    # This TLS is referenced for Prod and Democracy deployments. Use the ref: or
    # data: fields for either deployments.
    originTls:
      # If you're using a refenrece to an existing secret then the data: section
      # should be commented out and vice-versa.
      # Reference to an existing secret in the cluster
      # "cauldron-wildcard-letsencrypt" is for sandboxes, wildcard cert managed
      # via infrastructure
      ref:
      # for local testing purposes or CI pipeline use input a value
      # data:
      #   cert:
      #   key:
    # This TLS is referenced only for Prod deployments.
    originIlTls:
      # If you're using a refenrece to an existing secret then the data: section
      # should be commented out and vice-versa.
      # Reference to an existing secret in the cluster
      ref:
      # for local testing purposes or CI pipeline use input a value
      # data:
      #   cert:
      #   key:

nginx:
  containerImage:
    # Full path of the image registry inclusive of the image name
    imageRegistry: gcr.io/production-deployment/sefaria-asset
    # Commit id of the repo for which the image build has been triggered.
    tag: latest
  # set to search-democracy for democracy
  SEARCH_HOST: elasticsearch-data
  # key-pair values to load into nginx pod environment.  Takes precedence over global localsettings
  localsettings:
  # APP: nginx
  replicaCount: 1
  resources:
    requests:
      memory: "200Mi"
      cpu: "80m"
    limits:
      memory: "300Mi"
      cpu: "150m"

monitor:
  # key-pair values to load into monitor pod environment.  Takes precedence over global localsettings
  localsettings:
  # APP: monitor
  containerImage:
    # Full path of the image registry inclusive of the image name
    imageRegistry: gcr.io/production-deployment/sefaria-web
    # Commit id of the repo for which the image build has been triggered.
    tag: latest
  replicaCount: 1
  resources:
    requests:
      memory: "300Mi"
      cpu: "50m"
    limits:
      memory: "400Mi"
      cpu: "100m"

secrets:
  localSettings:
    # A reference to a secret containing the local settings
    ref: local-settings-secret
    # The data keys can be used to override values in the local settings secret.
    # This is intended for local development use and CI, do not use this in
    # production.
    #
    # data:
    #   DATABASES_HOST:
    #   DATABASES_PASS:
    #   DATABASES_USER:
    #   DATABASES_PORT:
    #   GOOGLE_OAUTH2_CLIENT_ID:
    #   GOOGLE_OAUTH2_CLIENT_SECRET:
    #   SECRET_KEY:
    #   MANDRILL_API_KEY:
    #   SEFARIA_DB:
    #   SEFARIA_DB_USER:
    #   SEFARIA_DB_PASSWORD:
    #   SEARCH_ADMIN_USER:
    #   SEARCH_ADMIN_PW:
    #   SEARCH_ADMIN_K8S:
    #   TURN_SECRET:
    #   TURN_USER:
    #   SEFARIA_BOT_API_KEY:
    #   CLOUDFLARE_ZONE:
    #   CLOUDFLARE_EMAIL:
    #   CLOUDFLARE_TOKEN:
    #   GOOGLE_TAG_MANAGER_CODE:
    #   GOOGLE_GTAG:
    #   HOTJAR_ID:
    #   AWS_ACCESS_KEY:
    #   AWS_SECRET_KEY:
    #   S3_BUCKET:
    #   NATIONBUILDER_TOKEN:
    #   NATIONBUILDER_CLIENT_ID:
    #   NATIONBUILDER_CLIENT_SECRET:
    #   MAILCHIMP_API_KEY:
    #   MAILCHIMP_ANNOUNCE_ID:
    #   MAILCHIMP_WEBHOOK_KEY:
    #   RECAPTCHA_PUBLIC_KEY:
    #   RECAPTCHA_PRIVATE_KEY:
    #   SIMPLE_JWT_SIGNING_KEY:
    #   MOBILE_APP_KEY:
  backupManager:
    # If you're using a reference to an existing secret then the data: section
    # should be commented out and vice-versa.
    ref:
    # data:
    #   key:
    #   serviceAccount:
  # This is used in mongobackup & reindex-elasticsearch cron jobs.
  slackWebhook:
    # If you're using a reference to an existing secret then the data: section
    # should be commented out and vice-versa.
    ref:
    # data:
  webpageCronjob:
    # If you're using a reference to an existing secret then the data: section
    # should be commented out and vice-versa.
    ref: trello-secret
    # data:


# Settings for various cronjobs
cronJobs:
  # Settings for regenerating long cached data
  regenerate:
    enabled: true
  dailyEmailNotifications:
    enabled: false
  indexFromQueue:
    enabled: false
  metrics:
    enabled: false
  nationBuilderSync:
    enabled: false
  rambiWebpagesWeekly:
    enabled: false
  reindexElasticSearch:
    enabled: false
  topicsIndexing:
    enabled: false
  trello:
    enabled: false
  weeklyEmailNotifications:
    enabled: false

localSettings:
  DEBUG: "False"
  DOMAIN_LANGUAGE: {}
    # https://www.sefaria.org: english
    # https://www.sefaria.org.il: hebrew
  MONGO_HOST: "mongo"
  APSCHEDULER_NAME: "apscheduler-{{ .Values.deployEnv }}"
  SEARCH_ADMIN: "http://elasticsearch-data:9200"
  TURN_SERVER: ''
  USE_CLOUDFLARE: false
  FRONT_END_URL: "http://www.sefaria.org"  # Use "http://${ENV_NAME}.sandbox.sefaria.org" in sandboxes and cauldrons
  OFFLINE: "False"
  DOWN_FOR_MAINTENANCE: "False"
  MAINTENANCE_MESSAGE: "Sefaria is down for scheduled maintenance. We expect to be back online within 15 minutes. Thank you for your patience."
  GLOBAL_WARNING: "False"
  GLOBAL_WARNING_MESSAGE: "Sefaria will be in <b>Read-Only</b> mode for scheduled maintenance from 4:45pm-6:45pm Pacific time. Edits will <b>not</b> be saved during that time."
  SITE_PACKAGE: "sites.sefaria"
  DEFAULT_FROM_EMAIL: "Sefaria <hello@sefaria.org>"
  SERVER_EMAIL: "dev@sefaria.org"
  MULTISERVER_ENABLED: "True"
  CRM_TYPE: "NATIONBUILDER"

instrumentation:
  enabled: false
  otelEndpoint: ""
  jaegerEndpoint: ""
