# define cors origin logic
map $http_origin $cors_origin {
    default "";
    ~^https:\/\/sheets\.([^\.]*\.cauldron\.)?(local)?sefaria.org(\.il)?$ "$http_origin"; #match sheets.sefaria.org, sheets.sefaria.org.il, sheets.some-name.cauldron.sefaria.org, sheets.some-name.cauldron.sefaria.org.il, sheets.localsefaria.org
}

# http redirect to https for localsefaria.org
server {
    listen 80;
    server_name localsefaria.org;
    return 301 https://$host$request_uri;
}

# https for localsefaria.org
server {
    listen 443 ssl;
    server_name localsefaria.org;

    ssl_certificate     /your/Sefaria-Project/path/nginx/ssl/localsefaria.crt;
    ssl_certificate_key /your/Sefaria-Project/path/nginx/ssl/localsefaria.key;

    location /sheets {
        if ($http_x_internal_proxy != "1") {
            return 301 https://sheets.$host$request_uri;
        }
        include /your/Sefaria-Project/path/nginx/common.conf;
    }

    location / {
        include /your/Sefaria-Project/path/nginx/common.conf;
    }
}

# http redirect to https for sheets.localsefaria.org
server {
    listen 80;
    server_name sheets.localsefaria.org;
    return 301 https://$host$request_uri;
}

# https for sheets.localsefaria.org
server {
    listen 443 ssl;
    server_name sheets.localsefaria.org;

    ssl_certificate     /your/Sefaria-Project/path/nginx/ssl/localsefaria.crt;
    ssl_certificate_key /your/Sefaria-Project/path/nginx/ssl/localsefaria.key;

    # Cases we want to move as-is to sefaria.org
    location /static/ {
        include /your/Sefaria-Project/path/nginx/common.conf;
    }
    location ~ ^/data\.\d+\.js$ {
        include /your/Sefaria-Project/path/nginx/common.conf;
    }
    location ~ /api/ {
        include /your/Sefaria-Project/path/nginx/common.conf;
    }
    location ~ ^/sheets(/|$) { # Excludes /sheets-something
        include /your/Sefaria-Project/path/nginx/common.conf;
    }

    # All other gets /sheets in their path beginning
    location / {
        proxy_pass http://127.0.0.1:8000/sheets;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Internal-Proxy 1;
    }
}
